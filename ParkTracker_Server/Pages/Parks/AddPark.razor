@page "/addpark"
@inject IJSRuntime JsRuntime
@using Business.Repository.IRepository
@using global::Models
@using Models
@using ParkTracker_Server.Helper
@inject IParkRepository ParkRepository
@inject NavigationManager NavigationManager

<section>
    <div>
        <EditForm Model="ParkModel" OnValidSubmit="HandleParkSubmitAdmin" class="form-control bg-light px-4 pb-4">
            <DataAnnotationsValidator/>
            <h3 class="text-success bg-light py-3">Add a Park</h3>
            <span class="text-danger mb-5">* Required</span>
            <div class="mt-2 mb-3">
                <label>Name of Park <span class="text-danger">*</span></label>
                <InputText 
                       class="form-control"
                       @bind-Value="@ParkModel.Name"
                />
            </div>
            <div class="mb-3">
                <label>State <span class="text-danger">*</span></label>
                <select @bind-value="@ParkModel.State" @bind-value:event="onchange" class="form-select" style="max-width: 200px;">
                    @foreach (var state in States)
                    {
                        <option value="@state">@state</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label>Description <span class="text-danger">*</span></label>
                <InputTextArea
                    class="form-control"
                    @bind-Value="@ParkModel.Description"
                />
            </div>
            <div class="mb-3">
                <label>Select if there a Fee <span class="text-danger">*</span></label>
                <InputCheckbox
                    class="form-check-input"
                    @bind-Value="@ParkModel.Fee"
                />
            </div>
            <button class="btn btn-success">Submit Park</button>
        </EditForm>
    </div>

</section>



@code {

    private async Task ToastSuccess()
    {
        await JsRuntime.ToastrSuccess("Success From The ToastSuccess Task");
    }

    private ParkDto ParkModel { get; set; } = new ParkDto();

    private async Task HandleParkSubmitAdmin()
    {
        var parkDetailsByName = await ParkRepository.DuplicateParkNameCheck(ParkModel.Name);
        if (parkDetailsByName != null)
        {
            return;
        }
        var createdResult = await ParkRepository.CreatePark(ParkModel);
        NavigationManager.NavigateTo("/addpark");
        await ToastSuccess();
    }


    string[] States = new[]
    {
        "",
        "Alabama",
        "Alaska",
        "Arizona",
        "Arkansas",
        "California",
        "Colorado",
        "Connecticut",
        "Delaware",
        "Florida",
        "Georgia",
        "Hawaii",
        "Idaho",
        "Illinois",
        "Indiana",
        "Iowa",
        "Kansas",
        "Kentucky",
        "Louisiana",
        "Maine",
        "Maryland",
        "Massachusetts",
        "Michigan",
        "Minnesota",
        "Mississippi",
        "Missouri",
        "Montana",
        "Nebraska",
        "Nevada",
        "New Hampshire",
        "New Jersey",
        "New Mexico",
        "New York",
        "North Carolina",
        "North Dakota",
        "Ohio",
        "Oklahoma",
        "Oregon",
        "Pennsylvania",
        "Rhode Island",
        "South Carolina",
        "South Dakota",
        "Tennessee",
        "Texas",
        "Utah",
        "Vermont",
        "Virginia",
        "Washington",
        "West Virginia",
        "Wisconsin",
        "Wyoming",
    };

}
