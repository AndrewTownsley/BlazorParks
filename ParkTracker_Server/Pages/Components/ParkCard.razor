@using Models
@using Business.Repository.IRepository
@using DataAccess.Data
@using global::Models
@inject IParkRepository ParkRepository


<article class="card bg-light col-6 p-4 mb-4">
    <div class="d-flex justify-content-between">
        <h4 class="text-success">
            <a 
                href="/parkdetail"
                class="text-success">
                @Park.Name
            </a>
        </h4>
        <span class="oi oi-heart text-success park-like" @onclick="OnFavoriteClick" @onchange="FavoriteSelectionChange"></span>
    </div>
    <h5 class="text-secondary">Location: @Park.State</h5>
    <p>@Park.Description</p>
    <div class="d-flex justify-content-between align-items-end">
        <p class="mb-0">Fee: <span style="font-weight: bold; color: #444;">@(Park.Fee ? "Yes" : "No")</span></p>
        <a href="#" class="btn btn-success">View Park</a>
    </div>
</article>
@code {

    //[Parameter]
    //public string ParkNameParam { get; set; }

    //[Parameter]
    //public string ParkIdParam { get; set; }

    [Parameter]
    public ParkDto Park { get; set; }

    private IEnumerable<ParkDto> Parks { get; set; } = new List<ParkDto>();

    protected override async Task OnInitializedAsync()
    {
        Parks = await ParkRepository.GetAllParks();
    }

    [Parameter]
    public EventCallback<MouseEventArgs> OnFavoriteClick { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteSelection { get; set; }

    protected async Task FavoriteSelectionChange(ChangeEventArgs e)
    {
        await OnFavoriteSelection.InvokeAsync();
    }
}
